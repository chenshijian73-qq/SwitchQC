<template>
  <div class="file-browser">
    <div class="file-tree">
      <ul>
        <li v-for="file in files" :key="file.path" @click="selectFile(file)">
          {{ file.name }}
          <ul v-if="file.children">
            <file-tree :files="file.children" @file-selected="onFileSelected" />
          </ul>
        </li>
      </ul>
    </div>
    <div class="text-editor">
      <textarea v-model="fileContent" :disabled="!selectedFile" />
    </div>
  </div>
</template>

<script>
export default {
  name: 'FileBrowser',
  props: {
    files: {
      type: Array,
      required: true,
    },
  },
  data() {
    return {
      selectedFile: null,
      fileContent: '',
    };
  },
  methods: {
    selectFile(file) {
      if (file.type === 'file') {
        this.selectedFile = file;
        this.fileContent = file.content;
        this.$emit('file-selected', file);
      }
    },
    onFileSelected(file) {
      this.selectedFile = file;
      this.fileContent = file.content;
      this.$emit('file-selected', file);
    },
  },
  components: {
    FileTree: {
      name: 'FileTree',
      props: {
        files: {
          type: Array,
          required: true,
        },
      },
      methods: {
        selectFile(file) {
          this.$emit('file-selected', file);
        },
      },
      components: {
        FileTree,
      },
      template: `
        <ul>
          <li v-for="file in files" :key="file.path" @click="selectFile(file)">
            {{ file.name }}
            <ul v-if="file.children">
              <file-tree :files="file.children" @file-selected="$emit('file-selected', $event)" />
            </ul>
          </li>
        </ul>
      `,
    },
  },
};
</script>

<style>
.file-browser {
  display: flex;
  height: 100%;
}

.file-tree {
  flex: 1;
  overflow-y: auto;
}

.text-editor {
  flex: 1;
}

textarea {
  width: 100%;
  height: 100%;
  border: none;
  resize: none;
}
</style>

在这个示例中，FileBrowser 组件是父组件，包含了 FileTree 和文本编辑框两个子组件。FileTree 组件用于显示文件列表树，FileBrowser 组件用于显示选定文件的内容，并允许用户编辑该文件的内容。

FileBrowser 组件接受一个 files prop，用于指定要显示的文件列表树。当用户选择文件时，FileBrowser 组件会将选定文件的内容传递给文本编辑框组件，并触发 file-selected 事件，以便父组件可以处理选定文件的内容。

FileTree 组件也接受一个 files prop，用于指定要显示的文件列表树。当用户选择文件时，FileTree 组件会触发 file-selected 事件，以便父组件可以处理选定文件的内容。

需要注意的是，这个示例只是一个简单的文件浏览器组件示例，实际的文件浏览器组件可能需要更多的功能和复杂的实现。
